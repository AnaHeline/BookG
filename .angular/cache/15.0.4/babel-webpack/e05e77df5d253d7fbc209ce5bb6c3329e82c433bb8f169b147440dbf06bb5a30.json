{"ast":null,"code":"import { environment } from './../../environments/environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./../autenticacao/token.service\";\nconst API = environment.apiURL;\nexport class AnimaisService {\n  constructor(http, tokenService) {\n    this.http = http;\n    this.tokenService = tokenService;\n  }\n  listaDoUsuario(nomeDoUsuario) {\n    const token = this.tokenService.retornaToken();\n    const headers = new HttpHeaders().append('x-access-token', token);\n    return this.http.get(`${API}/${nomeDoUsuario}/photos`, {\n      headers\n    });\n  }\n  buscaPorID(id) {\n    const token = this.tokenService.retornaToken();\n    const headers = new HttpHeaders().append('x-access-token', token);\n    return this.http.get(`${API}/photos/${id}/photos`, {\n      headers\n    });\n  }\n}\nAnimaisService.ɵfac = function AnimaisService_Factory(t) {\n  return new (t || AnimaisService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n};\nAnimaisService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AnimaisService,\n  factory: AnimaisService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAQ,kCAAkC;AAG9D,SAAqBC,WAAW,QAAQ,sBAAsB;;;;AAI9D,MAAMC,GAAG,GAAGF,WAAW,CAACG,MAAM;AAK9B,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB,EAAUC,YAA0B;IAApD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;EAAkB;EAE5EC,cAAc,CAACC,aAAoB;IACjC,MAAMC,KAAK,GAAG,IAAI,CAACH,YAAY,CAACI,YAAY,EAAE;IAC9C,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,MAAM,CAAC,gBAAgB,EAACH,KAAK,CAAC;IAChE,OAAO,IAAI,CAACJ,IAAI,CAACQ,GAAG,CAAU,GAAGZ,GAAG,IAAIO,aAAa,SAAS,EAAC;MAC7DG;KACD,CAAC;EACJ;EAEAG,UAAU,CAACC,EAAS;IAClB,MAAMN,KAAK,GAAG,IAAI,CAACH,YAAY,CAACI,YAAY,EAAE;IAC9C,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,MAAM,CAAC,gBAAgB,EAAEH,KAAK,CAAC;IACjE,OAAO,IAAI,CAACJ,IAAI,CAACQ,GAAG,CAAS,GAAGZ,GAAG,WAAWc,EAAE,SAAS,EAAC;MACxDJ;KAAU,CAAC;EACf;;AAjBWR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAa,SAAdb,cAAc;EAAAc,YAFb;AAAM","names":["environment","HttpHeaders","API","apiURL","AnimaisService","constructor","http","tokenService","listaDoUsuario","nomeDoUsuario","token","retornaToken","headers","append","get","buscaPorID","id","factory","providedIn"],"sourceRoot":"","sources":["/home/ana/Documentos/okp/gatBook/BookG/src/app/animais/animais.service.ts"],"sourcesContent":["import { environment } from './../../environments/environment';\nimport { TokenService } from './../autenticacao/token.service';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Animais, Animal } from './animais';\n\nconst API = environment.apiURL\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnimaisService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService) { }\n\n  listaDoUsuario(nomeDoUsuario:string): Observable<Animais>{\n    const token = this.tokenService.retornaToken();\n    const headers = new HttpHeaders().append('x-access-token',token);\n    return this.http.get<Animais>(`${API}/${nomeDoUsuario}/photos`,{\n      headers,\n    });\n  }\n\n  buscaPorID(id:number): Observable<Animal>{\n    const token = this.tokenService.retornaToken();\n    const headers = new HttpHeaders().append('x-access-token', token);\n    return this.http.get<Animal>(`${API}/photos/${id}/photos`,{\n      headers  });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}