{"ast":null,"code":"import { environment } from './../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API = environment.apiURL;\nexport class NovoUsuarioService {\n  constructor(http) {\n    this.http = http;\n  }\n  cadastroNovoUsuario(novoUsuario) {\n    return this.http.post(`${API}/user/signup`, novoUsuario);\n  }\n  verificaUsuarioExistente(nomeUsuario) {\n    return this.http.get(`${API}/user/exists/${nomeUsuario}`);\n  }\n}\nNovoUsuarioService.ɵfac = function NovoUsuarioService_Factory(t) {\n  return new (t || NovoUsuarioService)(i0.ɵɵinject(i1.HttpClient));\n};\nNovoUsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NovoUsuarioService,\n  factory: NovoUsuarioService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAQ,qCAAqC;;;AAKjE,MAAMC,GAAG,GAAGD,WAAW,CAACE,MAAM;AAK9B,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,mBAAmB,CAACC,WAAwB;IAC1C,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAGP,GAAG,cAAc,EAAEM,WAAW,CAAC;EAC1D;EAEAE,wBAAwB,CAACC,WAAmB;IAC1C,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAGV,GAAG,gBAAgBS,WAAW,EAAE,CAAC;EAC3D;;AAVWP,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAS,SAAlBT,kBAAkB;EAAAU,YAFjB;AAAM","names":["environment","API","apiURL","NovoUsuarioService","constructor","http","cadastroNovoUsuario","novoUsuario","post","verificaUsuarioExistente","nomeUsuario","get","factory","providedIn"],"sourceRoot":"","sources":["/home/ana/Documentos/okp/gatBook/BookG/src/app/home/novo-usuario/novo-usuario.service.ts"],"sourcesContent":["import { environment } from './../../../environments/environment';\nimport { NovoUsuario } from './novo-usuario';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nconst API = environment.apiURL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NovoUsuarioService {\n\n  constructor(private http: HttpClient) { }\n\n  cadastroNovoUsuario(novoUsuario: NovoUsuario){\n    return this.http.post(`${API}/user/signup`, novoUsuario);\n  }\n\n  verificaUsuarioExistente(nomeUsuario: string) {\n    return this.http.get(`${API}/user/exists/${nomeUsuario}`);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}