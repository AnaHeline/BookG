{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../autenticacao/usuario/usuario.service\";\nimport * as i2 from \"@angular/router\";\nexport class AutenticacaoGuard {\n  constructor(usuarioService, router) {\n    this.usuarioService = usuarioService;\n    this.router = router;\n  }\n  canLoad(route, segments) {\n    if (!this.usuarioService.estaLogado()) {\n      this.router.navigate(['']);\n      return false;\n    }\n    return true;\n  }\n}\nAutenticacaoGuard.ɵfac = function AutenticacaoGuard_Factory(t) {\n  return new (t || AutenticacaoGuard)(i0.ɵɵinject(i1.UsuarioService), i0.ɵɵinject(i2.Router));\n};\nAutenticacaoGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AutenticacaoGuard,\n  factory: AutenticacaoGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,iBAAiB;EAE5BC,YACUC,cAA8B,EAC9BC,MAAc;IADd,mBAAc,GAAdD,cAAc;IACd,WAAM,GAANC,MAAM;EACd;EAEFC,OAAO,CACLC,KAAY,EACZC,QAAsB;IAEtB,IAAI,CAAC,IAAI,CAACJ,cAAc,CAACK,UAAU,EAAE,EAAC;MACpC,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1B,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;;AAhBWR,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAS,SAAjBT,iBAAiB;EAAAU,YAFhB;AAAM","names":["AutenticacaoGuard","constructor","usuarioService","router","canLoad","route","segments","estaLogado","navigate","factory","providedIn"],"sourceRoot":"","sources":["/home/ana/Documentos/okp/gatBook/BookG/src/app/autenticao/autenticacao.guard.ts"],"sourcesContent":["import { UsuarioService } from './../autenticacao/usuario/usuario.service';\nimport { Injectable } from '@angular/core';\nimport { CanLoad, Route, UrlSegment, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutenticacaoGuard implements CanLoad {\n\n  constructor(\n    private usuarioService: UsuarioService,\n    private router: Router\n  ){}\n\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean\n    | UrlTree {\n    if (!this.usuarioService.estaLogado()){\n      this.router.navigate(['']);\n      return false;\n    }\n    return true;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}