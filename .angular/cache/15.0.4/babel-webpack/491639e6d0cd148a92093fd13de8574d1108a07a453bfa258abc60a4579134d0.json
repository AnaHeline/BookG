{"ast":null,"code":"import { first, map, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./novo-usuario.service\";\nexport class UsuarioExisteService {\n  constructor(novoUsuarioService) {\n    this.novoUsuarioService = novoUsuarioService;\n  }\n  usuarioJaExiste() {\n    return control => {\n      return control.valueChanges.pipe(switchMap(nomeUsuario => this.novoUsuarioService.verificaUsuarioExistente(nomeUsuario)), map(usuarioExiste => usuarioExiste ? {\n        usuarioExistente: true\n      } : null), first());\n    };\n  }\n}\nUsuarioExisteService.ɵfac = function UsuarioExisteService_Factory(t) {\n  return new (t || UsuarioExisteService)(i0.ɵɵinject(i1.NovoUsuarioService));\n};\nUsuarioExisteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioExisteService,\n  factory: UsuarioExisteService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,KAAK,EAAEC,GAAG,EAAEC,SAAS,QAAQ,gBAAgB;;;AAKtD,OAAM,MAAOC,oBAAoB;EAE/BC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;EAAsB;EAE5DC,eAAe;IACb,OAAQC,OAAwB,IAAI;MAClC,OAAOA,OAAO,CAACC,YAAY,CAACC,IAAI,CAC9BP,SAAS,CAAEQ,WAAW,IACpB,IAAI,CAACL,kBAAkB,CAACM,wBAAwB,CAACD,WAAW,CAAC,CAC9D,EACDT,GAAG,CAAEW,aAAa,IAChBA,aAAa,GAAG;QAAEC,gBAAgB,EAAE;MAAI,CAAE,GAAG,IAAI,CAClD,EACDb,KAAK,EAAE,CACR;IACH,CAAC;EACH;;AAhBWG,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;SAApBA,oBAAoB;EAAAW,SAApBX,oBAAoB;EAAAY,YAFnB;AAAM","names":["first","map","switchMap","UsuarioExisteService","constructor","novoUsuarioService","usuarioJaExiste","control","valueChanges","pipe","nomeUsuario","verificaUsuarioExistente","usuarioExiste","usuarioExistente","factory","providedIn"],"sourceRoot":"","sources":["/home/ana/Documentos/okp/gatBook/BookG/src/app/home/novo-usuario/usuario-existe.service.ts"],"sourcesContent":["import { AbstractControl } from '@angular/forms';\nimport { NovoUsuarioService } from './novo-usuario.service';\nimport { Injectable } from '@angular/core';\nimport { first, map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioExisteService {\n\n  constructor(private novoUsuarioService: NovoUsuarioService){}\n\n  usuarioJaExiste(){\n    return (control: AbstractControl) => {\n      return control.valueChanges.pipe(\n        switchMap((nomeUsuario) =>\n          this.novoUsuarioService.verificaUsuarioExistente(nomeUsuario)\n        ),\n        map((usuarioExiste) =>\n          usuarioExiste ? { usuarioExistente: true } : null\n        ),\n        first()\n      );\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}