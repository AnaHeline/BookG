{"ast":null,"code":"import { environment } from './../../environments/environment';\nimport { catchError, mapTo, of, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./../autenticacao/token.service\";\nconst API = environment.apiURL;\nconst NOT_MODIFINED = '304';\nexport class AnimaisService {\n  constructor(http, tokenService) {\n    this.http = http;\n    this.tokenService = tokenService;\n  }\n  listaDoUsuario(nomeDoUsuario) {\n    return this.http.get(`${API}/${nomeDoUsuario}/photos`);\n  }\n  buscaPorID(id) {\n    return this.http.get(`${API}/photos/${id}`);\n  }\n  excluiAnimal(id) {\n    return this.http.delete(`${API}/photos/${id}`);\n  }\n  curtir(id) {\n    return this.http.post(`${API}/photos/${id}/likes`, {}, {\n      observe: 'response'\n    }).pipe(mapTo(true), catchError(error => {\n      return error.status == NOT_MODIFINED ? of(false) : throwError(error);\n    }));\n  }\n}\nAnimaisService.ɵfac = function AnimaisService_Factory(t) {\n  return new (t || AnimaisService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n};\nAnimaisService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AnimaisService,\n  factory: AnimaisService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAQ,kCAAkC;AAE9D,SAASC,UAAU,EAAEC,KAAK,EAAcC,EAAE,EAAEC,UAAU,QAAQ,MAAM;;;;AAKpE,MAAMC,GAAG,GAAGL,WAAW,CAACM,MAAM;AAC9B,MAAMC,aAAa,GAAG,KAAK;AAK3B,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB,EAAUC,YAA0B;IAApD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;EAAkB;EAE5EC,cAAc,CAACC,aAAoB;IACjC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAU,GAAGT,GAAG,IAAIQ,aAAa,SAAS,CAAC;EACjE;EAEAE,UAAU,CAACC,EAAS;IAClB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAS,GAAGT,GAAG,WAAWW,EAAE,EAAE,CAAC;EACrD;EAEAC,YAAY,CAACD,EAAS;IACpB,OAAO,IAAI,CAACN,IAAI,CAACQ,MAAM,CAAS,GAAGb,GAAG,WAAWW,EAAE,EAAE,CAAC;EACxD;EAEAG,MAAM,CAACH,EAAU;IACf,OAAO,IAAI,CAACN,IAAI,CAACU,IAAI,CAAS,GAAGf,GAAG,WAAWW,EAAE,QAAQ,EACvD,EAAE,EACF;MAAEK,OAAO,EAAE;IAAU,CAAC,CACrB,CAACC,IAAI,CAACpB,KAAK,CAAC,IAAI,CAAC,EAAED,UAAU,CAAEsB,KAAK,IAAI;MACvC,OAAOA,KAAK,CAACC,MAAM,IAAIjB,aAAa,GAAGJ,EAAE,CAAC,KAAK,CAAC,GAAGC,UAAU,CAACmB,KAAK,CAAC;IACtE,CAAC,CAAC,CACH;EACH;;AAxBWf,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAiB,SAAdjB,cAAc;EAAAkB,YAFb;AAAM","names":["environment","catchError","mapTo","of","throwError","API","apiURL","NOT_MODIFINED","AnimaisService","constructor","http","tokenService","listaDoUsuario","nomeDoUsuario","get","buscaPorID","id","excluiAnimal","delete","curtir","post","observe","pipe","error","status","factory","providedIn"],"sourceRoot":"","sources":["/home/ana/Documentos/okp/gatBook/BookG/src/app/animais/animais.service.ts"],"sourcesContent":["import { environment } from './../../environments/environment';\nimport { TokenService } from './../autenticacao/token.service';\nimport { catchError, mapTo, Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Animais, Animal } from './animais';\n\nconst API = environment.apiURL\nconst NOT_MODIFINED = '304';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnimaisService {\n\n  constructor(private http: HttpClient, private tokenService: TokenService) { }\n\n  listaDoUsuario(nomeDoUsuario:string): Observable<Animais>{\n    return this.http.get<Animais>(`${API}/${nomeDoUsuario}/photos`);\n  }\n\n  buscaPorID(id:number): Observable<Animal>{\n    return this.http.get<Animal>(`${API}/photos/${id}`);\n  }\n\n  excluiAnimal(id:number): Observable<Animal>{\n    return this.http.delete<Animal>(`${API}/photos/${id}`);\n  }\n\n  curtir(id: number): Observable<boolean>{\n    return this.http.post<Animal>(`${API}/photos/${id}/likes`,\n      {},\n      { observe: 'response'}\n      ).pipe(mapTo(true), catchError((error) => {\n        return error.status == NOT_MODIFINED ? of(false) : throwError(error);\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}