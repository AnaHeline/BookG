{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { minusculoValidator } from './minusculo.validator';\nimport { usuarioSenhaIguaisValidator } from './usuario-senha-iguais.validator';\nlet NovoUsuarioComponent = class NovoUsuarioComponent {\n  constructor(formBuilder, novoUsuarioService, usuarioExistenteService, router) {\n    this.formBuilder = formBuilder;\n    this.novoUsuarioService = novoUsuarioService;\n    this.usuarioExistenteService = usuarioExistenteService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.novoUsuarioForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      fullName: ['', [Validators.required, Validators.minLength(4)]],\n      userName: ['', [minusculoValidator], [this.usuarioExistenteService.usuarioJaExiste()]],\n      password: ['']\n    }, {\n      validators: [usuarioSenhaIguaisValidator]\n    });\n  }\n  cadastrar() {\n    const novoUsuario = this.novoUsuarioForm.getRawValue();\n    console.log(novoUsuario);\n  }\n};\nNovoUsuarioComponent = __decorate([Component({\n  selector: 'app-novo-usuario',\n  templateUrl: './novo-usuario.component.html',\n  styleUrls: ['./novo-usuario.component.css']\n})], NovoUsuarioComponent);\nexport { NovoUsuarioComponent };","map":{"version":3,"mappings":";AAEA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,kBAAkB,QAAQ,uBAAuB;AAG1D,SAASC,2BAA2B,QAAQ,kCAAkC;AAOvE,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAI/BC,YACUC,WAAwB,EACxBC,kBAAsC,EACtCC,uBAA6C,EAC7CC,MAAM;IAHN,gBAAW,GAAXH,WAAW;IACX,uBAAkB,GAAlBC,kBAAkB;IAClB,4BAAuB,GAAvBC,uBAAuB;IACvB,WAAM,GAANC,MAAM;EACb;EAEHC,QAAQ;IACN,IAAI,CAACC,eAAe,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MAC5CC,KAAK,EAAE,CAAC,EAAE,EAAC,CAACZ,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACY,KAAK,CAAC,CAAC;MACnDE,QAAQ,EAAE,CAAC,EAAE,EAAC,CAACd,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7DC,QAAQ,EAAE,CAAC,EAAE,EAAC,CAACf,kBAAkB,CAAC,EAAE,CAAC,IAAI,CAACM,uBAAuB,CAACU,eAAe,EAAE,CAAC,CAAC;MACrFC,QAAQ,EAAE,CAAC,EAAE;KACd,EACD;MACEC,UAAU,EAAE,CAACjB,2BAA2B;KACzC,CAEA;EACH;EAEAkB,SAAS;IACP,MAAMC,WAAW,GAAG,IAAI,CAACX,eAAe,CAACY,WAAW,EAAiB;IACrEC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EAC1B;CACD;AA7BYlB,oBAAoB,eALhCJ,SAAS,CAAC;EACT0B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWxB,oBAAoB,CA6BhC;SA7BYA,oBAAoB","names":["Component","Validators","minusculoValidator","usuarioSenhaIguaisValidator","NovoUsuarioComponent","constructor","formBuilder","novoUsuarioService","usuarioExistenteService","router","ngOnInit","novoUsuarioForm","group","email","required","fullName","minLength","userName","usuarioJaExiste","password","validators","cadastrar","novoUsuario","getRawValue","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/ana/Documentos/okp/gatBook/BookG/src/app/home/novo-usuario/novo-usuario.component.ts"],"sourcesContent":["import { UsuarioExisteService } from './usuario-existe.service';\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { minusculoValidator } from './minusculo.validator';\nimport { NovoUsuarioService } from './novo-usuario.service';\nimport { NovoUsuario } from './novo-usuario';\nimport { usuarioSenhaIguaisValidator } from './usuario-senha-iguais.validator';\n\n@Component({\n  selector: 'app-novo-usuario',\n  templateUrl: './novo-usuario.component.html',\n  styleUrls: ['./novo-usuario.component.css']\n})\nexport class NovoUsuarioComponent implements OnInit{\n\n  novoUsuarioForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private novoUsuarioService: NovoUsuarioService,\n    private usuarioExistenteService: UsuarioExisteService,\n    private router\n  ) {}\n\n  ngOnInit(): void {\n    this.novoUsuarioForm = this.formBuilder.group({\n      email: ['',[Validators.required, Validators.email]],\n      fullName: ['',[Validators.required, Validators.minLength(4)]],\n      userName: ['',[minusculoValidator], [this.usuarioExistenteService.usuarioJaExiste()]],\n      password: [''],\n    },\n    {\n      validators: [usuarioSenhaIguaisValidator],\n    }\n\n    );\n  }\n\n  cadastrar() {\n    const novoUsuario = this.novoUsuarioForm.getRawValue() as NovoUsuario;\n    console.log(novoUsuario);\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}